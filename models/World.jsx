/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 .\world.glb --transform --shadows --keepgroups 
Files: .\world.glb [73.26MB] > C:\Users\emanu\next-portfolio\world-transformed.glb [1.38MB] (98%)
*/

import React from 'react'
import { useGLTF } from '@react-three/drei'

export function Model(props) {
  const { nodes, materials } = useGLTF('/world-transformed.glb')
  return (
    <group {...props} dispose={null}>
      <group>
        <mesh castShadow receiveShadow geometry={nodes.square_forest_detail.geometry} material={materials.PaletteMaterial001} position={[-31, -1, 65]} rotation={[0, Math.PI / 2, 0]} />
        <group position={[-9, -1, 89]} rotation={[0, -Math.PI / 2, 0]}>
          <mesh castShadow receiveShadow geometry={nodes.mesh_0.geometry} material={materials.Material_7_001} />
          <mesh castShadow receiveShadow geometry={nodes.mesh_0_1.geometry} material={materials.PaletteMaterial002} />
        </group>
        <mesh castShadow receiveShadow geometry={nodes.square_plainToRock_detail.geometry} material={materials.Material_8_001} position={[-47, -1, 161]} rotation={[0, -Math.PI / 2, 0]} />
        <mesh castShadow receiveShadow geometry={nodes.square_rockToSand_detail.geometry} material={materials.Material_9_001} position={[-47, -1, 233]} rotation={[0, -Math.PI / 2, 0]} />
        <mesh castShadow receiveShadow geometry={nodes.body.geometry} material={materials.colormap} position={[-10.013, 0.15, 30.978]} rotation={[0, Math.PI / 6, 0]} />
        <mesh castShadow receiveShadow geometry={nodes.fence_stone_straight.geometry} material={materials.hexagons_medieval} position={[-4, -0.1, 26]} rotation={[0, Math.PI / 2, 0]} scale={4} />
        <mesh castShadow receiveShadow geometry={nodes.Tree_2_D_Color1.geometry} material={materials.forest} position={[24, 0, 27]} />
        <mesh castShadow receiveShadow geometry={nodes.flag.geometry} material={materials.colormap2} position={[-8, 0, 38.5]} />
      </group>
    </group>
  )
}

useGLTF.preload('/world-transformed.glb')
