/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 world.glb --transform -o C:\Users\emanu\nextjs-portfolio\public\World.jsx --shadows 
Files: world.glb [70.49MB] > C:\Users\emanu\nextjs-portfolio\public\world-transformed.glb [5.18MB] (93%)
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Model(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/world-transformed.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <group name="AnimalArmature" position={[22, 0, 229.5]} rotation={[0, -Math.PI / 4, 0]}>
          <primitive object={nodes.All} />
        </group>
        <primitive object={nodes.Root} />
        <group name="AnimalArmature2" position={[-13.5, 0, 169]} rotation={[0, Math.PI / 4, 0]}>
          <primitive object={nodes.All2} />
        </group>
        <primitive object={nodes.Root2} />
        <group name="AnimalArmature3" position={[-8, 0, 200]} rotation={[0, Math.PI / 4, 0]}>
          <primitive object={nodes.Body3} />
        </group>
        <primitive object={nodes.Root3} />
        <group name="AnimalArmature4" position={[-21, 0, 197]} rotation={[0, Math.PI / 3, 0]}>
          <primitive object={nodes.All3} />
        </group>
        <primitive object={nodes.Root4} />
        <group name="AnimalArmature5" position={[-9.5, 0, 196]} rotation={[0, -Math.PI / 3, 0]}>
          <primitive object={nodes.All4} />
        </group>
        <primitive object={nodes.Root5} />
        <group name="AnimalArmature6" position={[-3.5, 0, 213]} rotation={[0, -Math.PI / 3, 0]}>
          <primitive object={nodes.All5} />
        </group>
        <primitive object={nodes.Root6} />
        <group name="AnimalArmature7" position={[-1, 0, 208.5]} rotation={[0, -Math.PI / 6, 0]}>
          <primitive object={nodes.All6} />
        </group>
        <primitive object={nodes.Root7} />
        <group name="AnimalArmature8" position={[-29.5, 0, 192.5]} rotation={[0, Math.PI / 4, 0]}>
          <primitive object={nodes.All7} />
        </group>
        <primitive object={nodes.Root8} />
        <group name="AnimalArmature9" position={[-0.5, 0, 216]} rotation={[-Math.PI, -Math.PI / 4, -Math.PI]}>
          <primitive object={nodes.All8} />
        </group>
        <primitive object={nodes.Root9} />
        <group name="AnimalArmature10" position={[-4.5, 0, 178.5]} rotation={[0, Math.PI / 4, 0]}>
          <primitive object={nodes.All9} />
        </group>
        <group name="AnimalArmature11" position={[5.5, 0, 195]} rotation={[0, -Math.PI / 4, 0]}>
          <primitive object={nodes.Body11} />
        </group>
        <primitive object={nodes.Root10} />
        <group name="AnimalArmature12" position={[-2.5, 0, 162.5]} rotation={[0, -Math.PI / 4, 0]}>
          <primitive object={nodes.All10} />
        </group>
        <primitive object={nodes.Root11} />
        <mesh name="square_forest2" castShadow receiveShadow geometry={nodes.square_forest2.geometry} material={materials.PaletteMaterial001} position={[-31, -1, 1]} />
        <mesh name="fence_stone_straight" castShadow receiveShadow geometry={nodes.fence_stone_straight.geometry} material={materials.hexagons_medieval} position={[-4, -0.1, 26]} rotation={[0, Math.PI / 2, 0]} scale={4} />
        <mesh name="Tree_2_E_Color1" castShadow receiveShadow geometry={nodes.Tree_2_E_Color1.geometry} material={materials.forest} position={[-26, 0, 19]} />
        <mesh name="patch-grass-foliage" castShadow receiveShadow geometry={nodes['patch-grass-foliage'].geometry} material={materials.colormap} position={[-30, 0, 19]} />
        <mesh name="rock-a" castShadow receiveShadow geometry={nodes['rock-a'].geometry} material={materials.colormap2} position={[-22, 0, 24]} scale={5} />
        <mesh name="square_forestToPlain2" castShadow receiveShadow geometry={nodes.square_forestToPlain2.geometry} material={materials.Material_7_001} position={[-47, -1, 141]} rotation={[0, Math.PI / 2, 0]} />
        <mesh name="platform1" castShadow receiveShadow geometry={nodes.platform1.geometry} material={materials.PaletteMaterial002} position={[16, 0.05, 61]} />
        <mesh name="flowers-tall" castShadow receiveShadow geometry={nodes['flowers-tall'].geometry} material={materials.colormap8} position={[-30.5, 0, 97]} scale={2} />
        <mesh name="Wood_Log_B" castShadow receiveShadow geometry={nodes.Wood_Log_B.geometry} material={materials.resource} position={[10.85, 0.1, 87.9]} rotation={[0, -Math.PI / 4, 0]} />
        <mesh name="square_plainToRock_corner_B2" castShadow receiveShadow geometry={nodes.square_plainToRock_corner_B2.geometry} material={materials.Material_8_001} position={[13, -1, 237]} />
        <mesh name="Farm_House_Barn_01" castShadow receiveShadow geometry={nodes.Farm_House_Barn_01.geometry} material={materials.Color_Palette_01} position={[-23, 0, 164]} rotation={[0, Math.PI / 6, 0]} />
        <mesh name="Farm_Crop_Sunflower_Step_01" castShadow receiveShadow geometry={nodes.Farm_Crop_Sunflower_Step_01.geometry} material={materials.Color_Palette_01} position={[7, 0.25, 178]} />
        <mesh name="road" castShadow receiveShadow geometry={nodes.road.geometry} material={materials.colormap19} position={[10, 0, 188.5]} scale={2} />
        <mesh name="square_rockToSand2" castShadow receiveShadow geometry={nodes.square_rockToSand2.geometry} material={materials.Material_9_001} position={[-47, -1, 285]} rotation={[0, Math.PI / 2, 0]} />
        <mesh name="Props_Broken_Rope_Bridge_01" castShadow receiveShadow geometry={nodes.Props_Broken_Rope_Bridge_01.geometry} material={materials.Color_Palette_012} position={[13, -2, 265]} />
        <mesh name="RocksPackCube101" castShadow receiveShadow geometry={nodes.RocksPackCube101.geometry} material={materials.arena_atlas} position={[-1, 0, 280]} rotation={[0, -Math.PI / 2, 0]} />
        <mesh name="MedievalVillagePackMesh004" castShadow receiveShadow geometry={nodes.MedievalVillagePackMesh004.geometry} material={materials.atlas_asia_pack} position={[13, 0, 275]} rotation={[Math.PI / 2, 0, Math.PI / 2]} />
        <mesh name="MedievalVillagePackMesh006" castShadow receiveShadow geometry={nodes.MedievalVillagePackMesh006.geometry} material={materials.village_atlas} position={[14.5, 0.25, 278.25]} rotation={[Math.PI / 2, 0, 0]} />
        <mesh name="MedievalVillagePackCube002" castShadow receiveShadow geometry={nodes.MedievalVillagePackCube002.geometry} material={materials.arena_atlas} position={[9.75, 0, 273.75]} rotation={[0, 0.262, 0]} />
        <mesh name="fence-curved" castShadow receiveShadow geometry={nodes['fence-curved'].geometry} material={materials.colormap36} position={[15.5, 0, 331.25]} rotation={[0, -Math.PI / 2, 0]} scale={2} />
        <mesh name="square_sandToPlain_corner_B2" castShadow receiveShadow geometry={nodes.square_sandToPlain_corner_B2.geometry} material={materials.Material_9_0012} position={[-31, -1, 391]} />
        <mesh name="cargo-pile-b" castShadow receiveShadow geometry={nodes['cargo-pile-b'].geometry} material={materials.colormap63} position={[-11.5, 0, 423.5]} />
        <mesh name="rocks" castShadow receiveShadow geometry={nodes.rocks.geometry} material={materials.colormap68} position={[-9.5, -0.5, 514.5]} scale={[16, 8, 16]} />
        <mesh name="Head11" castShadow receiveShadow geometry={nodes.Head11.geometry} material={materials.material_0} position={[16, 1.271, 360.539]} rotation={[2.793, 0, -Math.PI]} scale={3} />
        <skinnedMesh name="Raccoon" geometry={nodes.Raccoon.geometry} material={materials.Atlas_002} skeleton={nodes.Raccoon.skeleton} position={[22, 0, 229.5]} rotation={[0, -Math.PI / 4, 0]} />
        <skinnedMesh name="Raccoon3" geometry={nodes.Raccoon3.geometry} material={materials.Atlas_002} skeleton={nodes.Raccoon3.skeleton} position={[-29.5, 0, 192.5]} rotation={[0, Math.PI / 4, 0]} />
        <skinnedMesh name="Dog" geometry={nodes.Dog.geometry} material={materials.Atlas_002} skeleton={nodes.Dog.skeleton} position={[-13.5, 0, 169]} rotation={[0, Math.PI / 4, 0]} />
        <skinnedMesh name="Chicken" geometry={nodes.Chicken.geometry} material={materials.Atlas_002} skeleton={nodes.Chicken.skeleton} position={[-8, 0, 200]} rotation={[0, Math.PI / 4, 0]} />
        <skinnedMesh name="Chicken4" geometry={nodes.Chicken4.geometry} material={materials.Atlas_002} skeleton={nodes.Chicken4.skeleton} position={[5.5, 0, 195]} rotation={[0, -Math.PI / 4, 0]} />
        <skinnedMesh name="Sheep" geometry={nodes.Sheep.geometry} material={materials.Atlas_002} skeleton={nodes.Sheep.skeleton} position={[-21, 0, 197]} rotation={[0, Math.PI / 3, 0]} />
        <skinnedMesh name="Sheep4" geometry={nodes.Sheep4.geometry} material={materials.Atlas_002} skeleton={nodes.Sheep4.skeleton} position={[-9.5, 0, 196]} rotation={[0, -Math.PI / 3, 0]} />
        <skinnedMesh name="Horse" geometry={nodes.Horse.geometry} material={materials.Atlas_002} skeleton={nodes.Horse.skeleton} position={[-3.5, 0, 213]} rotation={[0, -Math.PI / 3, 0]} />
        <skinnedMesh name="Wolf" geometry={nodes.Wolf.geometry} material={materials.Atlas_002} skeleton={nodes.Wolf.skeleton} position={[-1, 0, 208.5]} rotation={[0, -Math.PI / 6, 0]} />
        <skinnedMesh name="Wolf4" geometry={nodes.Wolf4.geometry} material={materials.Atlas_002} skeleton={nodes.Wolf4.skeleton} position={[-0.5, 0, 216]} rotation={[-Math.PI, -Math.PI / 4, -Math.PI]} />
        <skinnedMesh name="Pig" geometry={nodes.Pig.geometry} material={materials.Atlas_002} skeleton={nodes.Pig.skeleton} position={[-4.5, 0, 178.5]} rotation={[0, Math.PI / 4, 0]} />
        <skinnedMesh name="Cat" geometry={nodes.Cat.geometry} material={materials.Atlas_002} skeleton={nodes.Cat.skeleton} position={[-2.5, 0, 162.5]} rotation={[0, -Math.PI / 4, 0]} />
      </group>
    </group>
  )
}

useGLTF.preload('/world-transformed.glb')
